version: 2
jobs:
  test-server:
    docker:
      - image: circleci/python:3.6
      - image: circleci/mongo:4.2
        command: ["mongod", "--storageEngine", "ephemeralForTest", "--dbpath", "/data/db"]
    steps:
      - checkout
      - run:
          name: Upgrade pip
          command: pip install -U pip
      - run:
          name: Install tox
          command: pip install tox
      - run:
          name: Run tests
          command: tox
          working_directory: girder-dandi-archive

  test-gui:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run:
          name: Install web app
          command: yarn install --frozen-lockfile
          working_directory: web
      - run:
          name: Lint web app
          command: yarn run lint
          working_directory: web
      - run:
          name: Install E2E tests
          command: yarn install --frozen-lockfile
          working_directory: test
      - run:
          name: Lint E2E tests
          command: yarn run lint --no-fix --max-warnings=0
          working_directory: test

  test-e2e:
    docker:
      - image: circleci/python:3.6-node-browsers
      - image: circleci/mongo:4.2
        command: ["mongod", "--storageEngine", "ephemeralForTest", "--dbpath", "/data/db"]
    steps:
      - checkout
      - run:
          name: Create virtual environment
          command: python3 -m venv install_env
      - run:
          name: Activate virtual environment
          command: echo ". $CIRCLE_WORKING_DIRECTORY/install_env/bin/activate" >> $BASH_ENV
      - run:
          name: Upgrade pip
          command: pip install -U pip
      - run:
          name: Install girder-dandi-archive
          command: pip install .
          working_directory: girder-dandi-archive
      - run:
          name: Run girder-dandi-archive in the background
          command: girder serve
          working_directory: girder-dandi-archive
          background: true
      - run:
          name: Install web app
          command: yarn install --frozen-lockfile
          working_directory: web
      - run:
          name: Run web app
          command: yarn serve
          working_directory: web
          background: true
      - run:
          name: Install E2E tests
          command: yarn install --frozen-lockfile
          working_directory: test
      - run:
          name: Run E2E tests
          command: yarn run test
          working_directory: test
          environment:
            CLIENT_URL: http://localhost:8085

  provision:
    docker:
      - image: circleci/python:3.6
    environment:
      ANSIBLE_PRIVATE_KEY_FILE: "$HOME/girder-dandi-server.pem"
    steps:
      - checkout
      - run:
          name: Install Ansible
          command: sudo pip install ansible
      - run:
          name: Echo key to a file
          command: echo -e "$DEPLOYKEY" > "$HOME/girder-dandi-server.pem"
      - run:
          name: Change key permission
          command: chmod 600 "$HOME/girder-dandi-server.pem"
      - run:
          name: Run ansible playbook
          working_directory: ./ansible
          command: . ./provision.sh

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test-server
      - test-gui
      - test-e2e:
          requires:
            - test-server
            - test-gui
      - provision:
          requires:
            - test-e2e
          filters:
            branches:
              only: master
